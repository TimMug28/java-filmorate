
CREATE TABLE  IF NOT EXISTS genres (
  genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS  MPA_ratings (
  MPA_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rating VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS  users (
  user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email VARCHAR(255),
  login VARCHAR(255),
  name VARCHAR(255),
  birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
  film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255),
  description TEXT,
  release_date DATE,
  duration INTEGER,
  genre_id INTEGER,
  MPA_id INTEGER,
  like_id INTEGER,
  FOREIGN KEY (genre_id) REFERENCES genres(genre_id),
  FOREIGN KEY (MPA_id) REFERENCES MPA_ratings(MPA_id)
);

CREATE TABLE IF NOT EXISTS  likes (
  like_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id INTEGER,
  film_id INTEGER,
  FOREIGN KEY (user_id) REFERENCES users(user_id),
  FOREIGN KEY (film_id) REFERENCES films(film_id)
);

ALTER TABLE Likes
ADD CONSTRAINT fk_films_likes
FOREIGN KEY (film_id)
REFERENCES films(film_id);


CREATE TABLE IF NOT EXISTS  friendship (
  user_id_1 INTEGER,
  user_id_2 INTEGER,
  status VARCHAR(255),
  PRIMARY KEY (user_id_1, user_id_2),
  FOREIGN KEY (user_id_1) REFERENCES users(user_id),
  FOREIGN KEY (user_id_2) REFERENCES users(user_id)
);